#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

/ {
    // custom shift using mod-morph 

    behaviors {
        grave_escape: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            bindings = <&kp ESC>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LGUI)>;
        };

        super_bscp: super_backspace {
            compatible = "zmk,behavior-mod-morph";
            label = "SUPER_BSCP";
            bindings = <&kp BACKSPACE>, <&kp LA(BACKSPACE)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ctrl_guialttab: ctrl_guialttab {
            compatible = "zmk,behavior-mod-morph";
            label = "CTRL_GUIALTTAB";
            bindings = <&kp LCTRL>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_LALT)>;
            keep-mods = <(MOD_LGUI|MOD_LALT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_down {
            bindings = <&kp DOWN>;
            key-positions = <1 2>;
        };

        combo_bootloader {
            bindings = <&bootloader>;
            key-positions = <11 23 35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&grave_escape    &kp Q           &kp W           &kp E        &kp R  &kp T                   &kp Y        &kp U              &kp I        &kp O           &lt 4 P             &lt 4 LBKT
&ctrl_guialttab  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &kp F  &kp G                   &kp H        &mt RIGHT_SHIFT J  &mt RCTRL K  &mt LEFT_ALT L  &mt RIGHT_GUI SEMI  &lt 5 SQT
&kp LEFT_SHIFT   &lt 7 Z         &kp X           &kp C        &kp V  &lt 4 B                 &kp N        &kp M              &kp COMMA    &kp DOT         &kp SLASH           &lt 3 BACKSLASH
&kp LCTRL        &kp LALT        &kp LEFT_GUI    &kp SPACE    &sl 2               &kp ENTER  &super_bscp                                                                      &lt 7 RIGHT
            >;
        };

        Dvorak_DeadState {
            label = "NUM";
            bindings = <
&kp ESC  &kp AMPS     &kp LBKT  &kp LBRC   &kp RIGHT_BRACE  &kp LPAR                &kp EQUAL      &kp STAR           &kp RPAR      &kp PLUS    &kp RBKT       &kp BACKSLASH
&none    &kp TILDE    &kp AT    &kp LT     &kp GT           &kp MINUS               &kp GRAVE      &kp DOUBLE_QUOTES  &kp COLON     &kp DOLLAR  &kp BACKSLASH  &mo 5
&none    &kp PERCENT  &kp HASH  &kp DQT    &none            &kp UNDER               &kp PIPE       &kp EXCLAMATION    &kp QUESTION  &kp CARET   &kp SLASH      &none
&trans   &trans       &to 0     &kp SPACE  &sk LEFT_SHIFT                  &kp TAB  &kp BACKSPACE                                                              &trans
            >;
        };

        Dvorak_DeadState_v2 {
            label = "SYM";
            bindings = <
&kp ESC  &kp NUMBER_1  &kp N2     &kp N3     &kp N4          &kp N5                             &kp N6         &kp N7     &kp N8        &kp N9        &kp N0    &kp BACKSLASH
&none    &kp TILDE     &kp RBKT   &kp LS(W)  &kp LS(E)       &kp KP_MINUS                       &kp PLUS       &kp LS(Z)  &kp LS(Q)     &kp GRAVE     &kp BSLH  &mo 5
&none    &kp LS(N1)    &kp EQUAL  &trans     &trans          &kp LS(SINGLE_QUOTE)               &kp PIPE       &kp MINUS  &kp LS(LBKT)  &kp LS(RBKT)  &kp LBKT  &none
&trans   &trans        &to 0      &kp SPACE  &sk LEFT_SHIFT                            &kp TAB  &kp BACKSPACE                                                   &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp TAB       &none         &kp C_MUTE    &kp C_VOL_DN  &kp C_VOLUME_UP  &out OUT_TOG                  &none  &none  &kp F8  &none  &none     &kp C_VOL_UP
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &none                         &none  &none  &none   &none  &none     &kp C_VOL_DN
&kp LS(TAB)   &none         &none         &none         &none            &none                         &none  &none  &none   &none  &kp LEFT  &kp RIGHT
&trans        &trans        &mkp RCLK     &mkp LCLK     &mkp MCLK                          &bt BT_CLR  &none                                  &none
            >;
        };

        mouse_layer {
            bindings = <
&trans     &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &mkp LCLK  &mkp RCLK
&kp LCTRL  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans     &trans
&trans     &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans     &trans
&trans     &trans  &trans  &trans  &trans              &trans  &trans                                     &trans
            >;

            label = "MOUSE";
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
&kp KP_NUMLOCK         &kp LS(N1)      &kp KP_N7  &kp KP_N5  &kp KP_N3   &kp KP_N1               &kp KP_N9          &kp KP_N0           &kp KP_N2           &kp KP_N4  &kp KP_N6  &kp KP_N8
&kp C_PP               &kp LEFT_ARROW  &kp UP     &kp DOWN   &kp RIGHT   &kp TAB                 &kp LA(LG(LEFT))   &kp LS(LC(LG(N4)))  &kp LS(LC(LG(N4)))  &none      &kp F11    &kp F12
&kp C_NEXT             &none           &none      &none      &kp LG(N1)  &kp LG(N2)              &kp LA(LG(RIGHT))  &none               &none               &none      &kp LEFT   &kp RIGHT
&kp LG(LA(BACKSLASH))  &none           &mkp RCLK  &mkp LCLK  &mkp MCLK                   &trans  &trans                                                                           &none
            >;
        };
    };
};
